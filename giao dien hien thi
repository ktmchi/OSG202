#!/bin/bash

# Define the path to the JSON file
json_file="questions.json"

# Check if the JSON file exists
if [ ! -f "$json_file" ]; then
    echo "Error: JSON file '$json_file' not found!"
    exit 1
fi

# Get the total number of questions in the JSON file
total_questions=$(jq length "$json_file")

# Initialize variables for score and total points
score=0
total_points=0

# Initialize an array to keep track of shown question indices
shown_indices=()

# Initialize a counter for question numbers
question_number=0

# Start time for tracking duration
start_time=$(date +%s)

# Loop through each question in the JSON file
while (($question_number < 10)); do
    # Get a random index
    random_index=$(( RANDOM % total_questions ))
    
    # Check if the index has already been shown
    if [[ "${shown_indices[@]}" =~ "$random_index" ]]; then
        continue
    fi
    
    # Add the index to the array of shown indices
    shown_indices+=("$random_index")
    
    # Increment the question number
    ((question_number++))

    # Get the question and its details at the selected index
    question=$(jq -r ".[$random_index].question" "$json_file")
    options=$(jq -r ".[$random_index].options[]" "$json_file")
    correct_answer=$(jq -r ".[$random_index].correctAnswer" "$json_file")

    # Display the question using dialog
    dialog --backtitle "Questionnaire" \
           --title "Question $question_number" \
           --msgbox "$question" 10 60

    # Convert options to dialog-friendly format
    options_array=()
    while read -r option; do
        options_array+=("$option" "")
    done <<< "$options"

    # Display options and get user's answer using dialog
    user_answer=$(dialog --backtitle "Questionnaire" \
                        --title "Question $question_number" \
                        --menu "Choose the correct answer:" 15 60 4 \
                        "${options_array[@]}" \
                        3>&1 1>&2 2>&3)
    
    # Check answer
    if [ "$user_answer" == "$correct_answer" ]; then
        dialog --msgbox "Correct! +1 point" 10 30
        ((score++))
    else
        dialog --msgbox "Incorrect. The correct answer is: $correct_answer" 10 40
    fi
done

# Display total score
dialog --msgbox "Your final score is: $score / 10" 10 40

# Calculate and display duration
end_time=$(date +%s)
duration=$((end_time - start_time))
minutes=$((duration / 60))
seconds=$((duration % 60))
dialog --msgbox "Time taken: $minutes minutes and $seconds seconds." 10 40
